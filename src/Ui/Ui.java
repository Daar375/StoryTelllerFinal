/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ui;

import Code.BinarySearch;
import Code.ImageManager;
import Code.Pares;
import Controller.*;
import com.sun.xml.internal.bind.v2.schemagen.xmlschema.List;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
//import java.awt.List;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
//import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 *
 * @author Malab
 */
public class Ui extends javax.swing.JFrame {

    /**
     * Creates new form Ui
     */
    JFileChooser fileChooser = new JFileChooser();
    JFileChooser fileSaver = new JFileChooser();
    ArrayList<String> ULRS = new ArrayList();
    private Control Controlador = new Control();
    private Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    
    private Canvas canvas = new Canvas();
    private ArrayList<Pares> ArrayList;
    
    /*ArrayList keyEvents = new ArrayList<KeyEvent>();
        keyEvents.add(KeyEvent.VK_A);
        keyEvents.add(KeyEvent.VK_B);
        keyEvents.add(KeyEvent.VK_C);
        keyEvents.add(KeyEvent.VK_D);*/

    
    public Ui(Control pControl) {

        initComponents();
        setSize(screenSize);
        jPanel1.setSize(screenSize);
        this.Controlador = pControl;
    }
    
    public Ui() {
        initComponents();
        setSize(screenSize);
        jPanel1.setSize(screenSize);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                iFkeyPressed(evt);
            }
        });
        
        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        //Label_numImagenes = new javax.swing.JLabel();
        label_Descripcion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        // label_Tag3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        /// label_Tag1 = new javax.swing.JLabel();
        label_Tag2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        M_Nuevo = new javax.swing.JMenuItem();
        M_Abrir = new javax.swing.JMenuItem();
        M_Guardar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        M_AbrirJson = new javax.swing.JMenuItem();
        M_SeleccionarFoto = new javax.swing.JMenuItem();
        M_WebURL = new javax.swing.JMenuItem();
        M_Comenzar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        
        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 400, Short.MAX_VALUE));
        jFrame1Layout.setVerticalGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 300, Short.MAX_VALUE));
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);
        /*
        jLabel1.setText("Cantidad de Fotos: ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(600, 10, 150, 20);
        */
       /* Label_numImagenes.setText("0");
        getContentPane().add(Label_numImagenes);
        Label_numImagenes.setBounds(764, 10, 40, 20);
        */
        label_Descripcion.setText("Descripcion");
        getContentPane().add(label_Descripcion);
        
        label_Descripcion.setBounds(screenSize.width/2, 50, 500, 20);
        
        jLabel3.setText("");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(330, 10, 20, 14);
        
        jLabel4.setText("");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(430, 10, 20, 14);

        //label_Tag3.setText("Tag3"); getContentPane().add(label_Tag3);
        //label_Tag3.setBounds(440, 10, 70, 14);
        jLabel6.setText("");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(240, 10, 20, 14);

        //label_Tag1.setText("Tag1"); getContentPane().add(label_Tag1);
        //label_Tag1.setBounds(250, 10, 70, 14);
        label_Tag2.setText("Tag2");
        getContentPane().add(label_Tag2);
    label_Tag2.setBounds(screenSize.width/2, 10, 100, 50);
        label_Tag2.setFont(new Font("Serif",Font.ITALIC,20));
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 810, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 580, Short.MAX_VALUE));
        
        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 100, 810, 580);
        
        jMenu1.setText("Archivo");
        
        M_Nuevo.setAccelerator(
                javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        M_Nuevo.setText("Nuevo");
        M_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    M_NuevoClicked(evt);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });
        jMenu1.add(M_Nuevo);
        
        M_Abrir.setAccelerator(
                javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        M_Abrir.setText("Abrir");
        M_Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_AbrirClicked(evt);
            }
        });
        jMenu1.add(M_Abrir);
        
        M_Guardar.setAccelerator(
                javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        M_Guardar.setText("Guardar");
        M_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    M_GuardarClicked(evt);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });
        jMenu1.add(M_Guardar);
        
        jMenuBar1.add(jMenu1);
        
        jMenu3.setText("Herramientas");
        
        jMenu4.setText("Agregar");
        
        M_AbrirJson.setText("Abrir JSON");
        M_AbrirJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_AbrirJsonClicked(evt);
            }
        });
        jMenu4.add(M_AbrirJson);
        
        M_SeleccionarFoto.setText("Seleccionar Foto");
        M_SeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_SeleccionarFotoClicked(evt);
            }
        });
        jMenu4.add(M_SeleccionarFoto);
        
        M_WebURL.setText("Web URL");
        M_WebURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_WebURLClicked(evt);
            }
        });
        jMenu4.add(M_WebURL);
        
        jMenu3.add(jMenu4);
        
        M_Comenzar.setText("Comenzar");
        M_Comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M_ComenzarClicked(evt);
            }
        });
        jMenu3.add(M_Comenzar);
        
        jMenuBar1.add(jMenu3);
        
        jMenu2.setText("Help");
        
        jMenuItem4.setAccelerator(
                javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Help");
        jMenu2.add(jMenuItem4);
        
        jMenuBar1.add(jMenu2);
        
        setJMenuBar(jMenuBar1);
        
        pack();
    }// </editor-fold>

    private void M_NuevoClicked(java.awt.event.ActionEvent evt) throws IOException, InterruptedException {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Album");
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setAcceptAllFileFilterUsed(false);
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            this.Controlador.setAlbum(file);
            
        }
        this.Controlador.procesarURL_TXT();
        this.Controlador.procesarTags();
        this.Controlador.iniciarHilo();
        if (this.Controlador.getHilo() == null) {
            System.out.println("Hilo nulo");
        }
        
    }
    
    public void pintar(String urls) throws IOException {
        URL url = new URL(urls);
        
        BufferedImage image = ImageIO.read(url);
        int h = image.getHeight();
        int w = 500 * image.getWidth() / h;
        
        image = ImageManager.imageToBufferedImage(ImageManager.resizeImage(w, 500, image));
        jPanel1.getGraphics().setColor(Color.BLACK);
        jPanel1.getGraphics().drawRect(0, 0, 2000, 2000);
        jPanel1.getGraphics().fillRect(0, 0, 2000, 2000);
        jPanel1.getGraphics().drawImage(image, jPanel1.getWidth() / 6, jPanel1.getHeight() / 6, null);
        
    }
    
    private void M_AbrirClicked(java.awt.event.ActionEvent evt) {
        JFrame pick = new JFrame();
        JComboBox combofile = new JComboBox();
        ArrayList = this.Controlador.getSave();
        int index = 0;
        while (ArrayList.size() != index) {
            combofile.addItem(ArrayList.get(index).getLeft().toString());
            index++;
        }
        pick.add(combofile);
        pick.setVisible(true);
        pick.pack();
        combofile.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent event) {
                JComboBox<String> combo = (JComboBox<String>) event.getSource();
                
                try {
                    Controlador.abrir(combo.getSelectedItem().toString());
                    pick.setVisible(false);
                    pick.dispose();
                } catch (ClassNotFoundException | IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                
            }
        });
    }
    
    private void M_GuardarClicked(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar");
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        
        fileChooser.setName("Guardar");
        fileChooser.setDialogTitle("Guardar");
        fileChooser.setToolTipText("Guardar");
        
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            fileChooser.getCurrentDirectory();
            String filename = fileChooser.getSelectedFile().getName();
            String filepath = fileChooser.getSelectedFile().getPath();
            this.Controlador.guardar(new File(filepath), filename);
            
        } else {
            
            System.out.println("No se guardo");
            JOptionPane.showMessageDialog(jFrame1, "Nombre Repetido, no se guardo");
        }
        
    }
    
    private void M_ComenzarClicked(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    
    private void M_AbrirJsonClicked(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }
    
    private void M_SeleccionarFotoClicked(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    
    private void M_WebURLClicked(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    
    public Control getControlador() {
        return Controlador;
    }
    
    public void setControlador(Control Controlador) {
        this.Controlador = Controlador;
    }
    
    public void actualizarDescripcion(String pString) {
        this.label_Descripcion.setText(pString);
    }

    public void actualizarTag(String pString) {
        this.label_Tag2.setText(pString);
    }
    /*
	 * public void actualizarTag(String pString){
	 * this.label_Tag1.setText(pString); }
     */
    private javax.swing.JMenuItem M_Abrir;
    private javax.swing.JMenuItem M_AbrirJson;
    private javax.swing.JMenuItem M_Comenzar;
    private javax.swing.JMenuItem M_Guardar;
    private javax.swing.JMenuItem M_Nuevo;
    private javax.swing.JMenuItem M_SeleccionarFoto;
    private javax.swing.JMenuItem M_WebURL;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private JPanel jPanel1;
    private javax.swing.JLabel label_Descripcion;
    // private javax.swing.JLabel label_Tag1;
    private javax.swing.JLabel label_Tag2;
    // private javax.swing.JLabel label_Tag3;
    // End of variables declaration

    

    public void iFkeyPressed(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        this.getControlador().getHilo().ONOFF();
        System.out.println("Una tecla ha sido Presionada");
    }

    

}
